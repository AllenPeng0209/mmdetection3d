import torch
import iou_cuda
import time

# print ("-------------------------------------------")

# result_np = result.cpu().numpy()
# import numpy as np
# np.testing.assert_array_equal(result_np, gt_np)
x = torch.FloatTensor(
[
 [[ 48.063625, -13.908608],
 [ 49.401287, -12.704173],
 [ 46.256374,  -9.211392],
 [ 44.918713, -10.415828]],

[[ 49.117275, -21.55686 ],
 [ 50.762726, -22.506859],
 [ 53.062725, -18.523142],
 [ 51.417274, -17.573143]],

[[-79.02344,  -10.454987],
 [-78.012,    -12.958383],
 [-68.276566,  -9.025013],
 [-69.288,     -6.521617]],

[[-78.54578,  -10.757164],
 [-77.54264,  -13.263901],
 [-67.79422,   -9.362837],
 [-68.797356,  -6.8561  ]],

[[-17.71146,   17.220331],
 [-15.935007,  17.51053 ],
 [-16.628262,  21.754278],
 [-18.404715,  21.464079]],

[[ 57.17796,    -7.3279605],
 [ 55.41631,    -8.039714 ],
 [ 57.10204,   -12.21204  ],
 [ 58.86369,   -11.500287 ]],

[[37.703114, - 41.41713],
[39.337257, - 40.948547],
[38.09689, - 36.62287],
[36.462746, - 37.091454]],

[[ 30.843113, -25.78713 ],
 [ 32.477257, -25.318546],
 [ 31.236889, -20.992868],
 [ 29.602745, -21.461452]],

[[ 25.07306,  -15.189779],
 [ 24.99694,  -16.988169],
 [ 29.393005, -17.174234],
 [ 29.469124, -15.375844]],

[[-42.580128, -17.985746],
 [-42.671967, -19.683264],
 [-38.078686, -19.931765],
 [-37.986847, -18.234247]],

[[-26.025644, -15.490511],
 [-26.836744, -17.097406],
 [-22.551687, -19.260344],
 [-21.740587, -17.653448]],
]
).cuda()
# x = torch.round(x * 100) / 100.
y = torch.FloatTensor(
[
 [[ 48.063602, -13.908583],
 [ 49.401264, -12.704147],
 [ 46.25635,   -9.211367],
 [ 44.91869,  -10.415802]],

 [[49.117287, - 21.55684],
  [50.762737, - 22.50684],
  [53.062737, - 18.523123],
  [51.417286, - 17.573124]],

[[-79.02345,  -10.454996],
 [-78.01202,  -12.958392],
 [-68.27659,  -9.025023],
 [-69.288025,  -6.521627]],

[[-78.54578,   -10.757167 ],
 [-77.54265,   -13.263904 ],
 [-67.79423,    -9.36284  ],
 [-68.797356,   -6.8561034]],

[[-17.711462,  17.22032 ],
 [-15.93501,   17.510519],
 [-16.628263,  21.754267],
 [-18.404716,  21.464067]],

[[ 57.177948,  -7.327954],
 [ 55.416298,  -8.039707],
 [ 57.102028, -12.212034],
 [ 58.863678, -11.500281]],

[[ 37.703117, -41.417126],
 [ 39.33726,  -40.948544],
 [ 38.096893, -36.622868],
 [ 36.46275,  -37.09145 ]],

[[ 30.84312,  -25.78714 ],
 [ 32.477264, -25.318558],
 [ 31.236897, -20.99288 ],
 [ 29.602753, -21.461462]],

[[25.07306, - 15.18978],
[24.996943, - 16.98817],
[29.393005, - 17.174234],
[29.469124, - 15.375845]],

[[-42.580128, -17.98574 ],
 [-42.671967, -19.683258],
 [-38.078682, -19.931759],
 [-37.986843, -18.234241]],

[[-26.025646, -15.490512],
 [-26.836748, -17.097408],
 [-22.551691, -19.260344],
 [-21.740591, -17.653448]],

 ]
).cuda()
# y = torch.round(y * 100) / 100.
#x = x[:,[1,2,3,0],:]
#y = y[:,[1,2,3,0],:]
# print(y.tolist())
# print(x.tolist())
# xt = torch.FloatTensor([26.029978, -38.924950, 24.729822, -40.310444]).cuda()
# xt = x[:2, :2].view(-1)
# print("fk me ")
# print(xt.tolist())
# output = xt[0] * xt[3] - xt[1] * xt[2]
# print(output.cpu().numpy())
# print(output.tolist())
result = iou_cuda.iou_forward(x, y)
print(result)
result = iou_cuda.iou_forward(y, x)
print(result)


